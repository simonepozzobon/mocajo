{
    "v": "5.1.20",
    "fr": 60,
    "ip": 0,
    "op": 120,
    "w": 500,
    "h": 500,
    "nm": "menu",
    "ddd": 0,
    "assets": [],
    "layers": [{
        "ddd": 0,
        "ind": 1,
        "ty": 4,
        "nm": "top contorni",
        "sr": 1,
        "ks": {
            "o": {
                "a": 0,
                "k": 100,
                "ix": 11
            },
            "r": {
                "a": 1,
                "k": [{
                    "i": {
                        "x": [0.833],
                        "y": [0.833]
                    },
                    "o": {
                        "x": [0.167],
                        "y": [0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167"],
                    "t": 0,
                    "s": [0],
                    "e": [-45]
                }, {
                    "i": {
                        "x": [0.833],
                        "y": [0.833]
                    },
                    "o": {
                        "x": [0.167],
                        "y": [0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167"],
                    "t": 60,
                    "s": [-45],
                    "e": [0]
                }, {
                    "t": 120
                }],
                "ix": 10,
                "x": "var $bm_rt;\nfunction easeandwizz_inoutCirc(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return sum(mul(div($bm_neg(c), 2), sub(Math.sqrt(sub(1, mul(t, t))), 1)), b);\n    return sum(mul(div(c, 2), sum(Math.sqrt(sub(1, mul(t -= 2, t))), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_inoutCirc(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "p": {
                "a": 1,
                "k": [{
                    "i": {
                        "x": 0.833,
                        "y": 0.833
                    },
                    "o": {
                        "x": 0.167,
                        "y": 0.167
                    },
                    "n": "0p833_0p833_0p167_0p167",
                    "t": 0,
                    "s": [250, 164, 0],
                    "e": [250, 264.5, 0],
                    "to": [0, 16.75, 0],
                    "ti": [0, 0, 0]
                }, {
                    "i": {
                        "x": 0.833,
                        "y": 0.833
                    },
                    "o": {
                        "x": 0.167,
                        "y": 0.167
                    },
                    "n": "0p833_0p833_0p167_0p167",
                    "t": 60,
                    "s": [250, 264.5, 0],
                    "e": [250, 164, 0],
                    "to": [0, 0, 0],
                    "ti": [0, 16.75, 0]
                }, {
                    "t": 120
                }],
                "ix": 2,
                "x": "var $bm_rt;\nfunction easeandwizz_inoutCirc(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return sum(mul(div($bm_neg(c), 2), sub(Math.sqrt(sub(1, mul(t, t))), 1)), b);\n    return sum(mul(div(c, 2), sum(Math.sqrt(sub(1, mul(t -= 2, t))), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_inoutCirc(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": {
                "a": 0,
                "k": [194.5, 14.5, 0],
                "ix": 1
            },
            "s": {
                "a": 1,
                "k": [{
                    "i": {
                        "x": [0.833, 0.833, 0.833],
                        "y": [0.833, 0.833, 0.833]
                    },
                    "o": {
                        "x": [0.167, 0.167, 0.167],
                        "y": [0.167, 0.167, 0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167", "0p833_0p833_0p167_0p167", "0p833_0p833_0p167_0p167"],
                    "t": 0,
                    "s": [100, 100, 100],
                    "e": [80, 100, 100]
                }, {
                    "i": {
                        "x": [0.833, 0.833, 0.833],
                        "y": [0.833, 0.833, 0.833]
                    },
                    "o": {
                        "x": [0.167, 0.167, 0.167],
                        "y": [0.167, 0.167, 0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167", "0p833_0p833_0p167_0p167", "0p833_0p833_0p167_0p167"],
                    "t": 60,
                    "s": [80, 100, 100],
                    "e": [100, 100, 100]
                }, {
                    "t": 120
                }],
                "ix": 6,
                "x": "var $bm_rt;\nfunction easeandwizz_inoutCirc(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return sum(mul(div($bm_neg(c), 2), sub(Math.sqrt(sub(1, mul(t, t))), 1)), b);\n    return sum(mul(div(c, 2), sum(Math.sqrt(sub(1, mul(t -= 2, t))), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_inoutCirc(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            }
        },
        "ao": 0,
        "shapes": [{
            "ty": "gr",
            "it": [{
                "ind": 0,
                "ty": "sh",
                "ix": 1,
                "ks": {
                    "a": 0,
                    "k": {
                        "i": [
                            [0, 0],
                            [0, 0]
                        ],
                        "o": [
                            [0, 0],
                            [0, 0]
                        ],
                        "v": [
                            [14.5, 14.5],
                            [374.5, 14.5]
                        ],
                        "c": false
                    },
                    "ix": 2
                },
                "nm": "Tracciato 1",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
            }, {
                "ty": "st",
                "c": {
                    "a": 0,
                    "k": [0, 0, 0, 1],
                    "ix": 3
                },
                "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 4
                },
                "w": {
                    "a": 0,
                    "k": 29,
                    "ix": 5
                },
                "lc": 1,
                "lj": 1,
                "ml": 10,
                "nm": "Traccia 1",
                "mn": "ADBE Vector Graphic - Stroke",
                "hd": false
            }, {
                "ty": "tr",
                "p": {
                    "a": 0,
                    "k": [0, 0],
                    "ix": 2
                },
                "a": {
                    "a": 0,
                    "k": [0, 0],
                    "ix": 1
                },
                "s": {
                    "a": 0,
                    "k": [100, 100],
                    "ix": 3
                },
                "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                },
                "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                },
                "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                },
                "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                },
                "nm": "Trasformazione"
            }],
            "nm": "Gruppo 1",
            "np": 2,
            "cix": 2,
            "ix": 1,
            "mn": "ADBE Vector Group",
            "hd": false
        }],
        "ip": 0,
        "op": 120,
        "st": 0,
        "bm": 0
    }, {
        "ddd": 0,
        "ind": 2,
        "ty": 4,
        "nm": "middle contorni",
        "sr": 1,
        "ks": {
            "o": {
                "a": 0,
                "k": 100,
                "ix": 11
            },
            "r": {
                "a": 0,
                "k": 0,
                "ix": 10
            },
            "p": {
                "a": 0,
                "k": [253.171, 250, 0],
                "ix": 2
            },
            "a": {
                "a": 0,
                "k": [299.171, 298, 0],
                "ix": 1
            },
            "s": {
                "a": 0,
                "k": [100, 100, 100],
                "ix": 6
            }
        },
        "ao": 0,
        "shapes": [{
            "ty": "gr",
            "it": [{
                "ind": 0,
                "ty": "sh",
                "ix": 1,
                "ks": {
                    "a": 0,
                    "k": {
                        "i": [
                            [0, 0],
                            [123.816, 0],
                            [0, 124.54],
                            [-124.54, 0],
                            [-1.786, -123],
                            [0, 0]
                        ],
                        "o": [
                            [2.341, 123.535],
                            [-124.54, 0],
                            [0, -124.54],
                            [123.425, 0],
                            [0.017, 1.111],
                            [0, 0]
                        ],
                        "v": [
                            [224.33, 0.5],
                            [-1.17, 225.5],
                            [-226.67, 0],
                            [-1.17, -225.5],
                            [224.33, 0.5],
                            [-183.17, 0.5]
                        ],
                        "c": false
                    },
                    "ix": 2
                },
                "nm": "Tracciato 1",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
            }, {
                "ty": "st",
                "c": {
                    "a": 0,
                    "k": [0, 0, 0, 1],
                    "ix": 3
                },
                "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 4
                },
                "w": {
                    "a": 0,
                    "k": 29,
                    "ix": 5
                },
                "lc": 1,
                "lj": 1,
                "ml": 10,
                "nm": "Traccia 1",
                "mn": "ADBE Vector Graphic - Stroke",
                "hd": false
            }, {
                "ty": "tr",
                "p": {
                    "a": 0,
                    "k": [299.17, 298],
                    "ix": 2
                },
                "a": {
                    "a": 0,
                    "k": [0, 0],
                    "ix": 1
                },
                "s": {
                    "a": 0,
                    "k": [100, 100],
                    "ix": 3
                },
                "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                },
                "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                },
                "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                },
                "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                },
                "nm": "Trasformazione"
            }],
            "nm": "Gruppo 1",
            "np": 2,
            "cix": 2,
            "ix": 1,
            "mn": "ADBE Vector Group",
            "hd": false
        }, {
            "ty": "tm",
            "s": {
                "a": 1,
                "k": [{
                    "i": {
                        "x": [0.833],
                        "y": [0.833]
                    },
                    "o": {
                        "x": [0.167],
                        "y": [0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167"],
                    "t": 0,
                    "s": [80.26],
                    "e": [0]
                }, {
                    "i": {
                        "x": [0.833],
                        "y": [0.833]
                    },
                    "o": {
                        "x": [0.167],
                        "y": [0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167"],
                    "t": 50,
                    "s": [0],
                    "e": [0]
                }, {
                    "i": {
                        "x": [0.833],
                        "y": [0.833]
                    },
                    "o": {
                        "x": [0.167],
                        "y": [0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167"],
                    "t": 60,
                    "s": [0],
                    "e": [0]
                }, {
                    "i": {
                        "x": [0.833],
                        "y": [0.833]
                    },
                    "o": {
                        "x": [0.167],
                        "y": [0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167"],
                    "t": 68,
                    "s": [0],
                    "e": [80.26]
                }, {
                    "t": 120
                }],
                "ix": 1,
                "x": "var $bm_rt;\nfunction easeandwizz_inoutCirc(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return sum(mul(div($bm_neg(c), 2), sub(Math.sqrt(sub(1, mul(t, t))), 1)), b);\n    return sum(mul(div(c, 2), sum(Math.sqrt(sub(1, mul(t -= 2, t))), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_inoutCirc(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "e": {
                "a": 1,
                "k": [{
                    "i": {
                        "x": [0.833],
                        "y": [0.833]
                    },
                    "o": {
                        "x": [0.167],
                        "y": [0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167"],
                    "t": 0,
                    "s": [100],
                    "e": [78.5]
                }, {
                    "i": {
                        "x": [0.833],
                        "y": [0.833]
                    },
                    "o": {
                        "x": [0.167],
                        "y": [0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167"],
                    "t": 60,
                    "s": [78.5],
                    "e": [100]
                }, {
                    "t": 120
                }],
                "ix": 2,
                "x": "var $bm_rt;\nfunction easeandwizz_inoutCirc(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return sum(mul(div($bm_neg(c), 2), sub(Math.sqrt(sub(1, mul(t, t))), 1)), b);\n    return sum(mul(div(c, 2), sum(Math.sqrt(sub(1, mul(t -= 2, t))), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_inoutCirc(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "o": {
                "a": 0,
                "k": 0,
                "ix": 3
            },
            "m": 1,
            "ix": 2,
            "nm": "Taglia tracciati 1",
            "mn": "ADBE Vector Filter - Trim",
            "hd": false
        }],
        "ip": 0,
        "op": 120,
        "st": 0,
        "bm": 0
    }, {
        "ddd": 0,
        "ind": 3,
        "ty": 4,
        "nm": "bottom contorni",
        "sr": 1,
        "ks": {
            "o": {
                "a": 0,
                "k": 100,
                "ix": 11
            },
            "r": {
                "a": 1,
                "k": [{
                    "i": {
                        "x": [0.833],
                        "y": [0.833]
                    },
                    "o": {
                        "x": [0.167],
                        "y": [0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167"],
                    "t": 0,
                    "s": [0],
                    "e": [45]
                }, {
                    "i": {
                        "x": [0.833],
                        "y": [0.833]
                    },
                    "o": {
                        "x": [0.167],
                        "y": [0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167"],
                    "t": 60,
                    "s": [45],
                    "e": [0]
                }, {
                    "t": 120
                }],
                "ix": 10,
                "x": "var $bm_rt;\nfunction easeandwizz_inoutCirc(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return sum(mul(div($bm_neg(c), 2), sub(Math.sqrt(sub(1, mul(t, t))), 1)), b);\n    return sum(mul(div(c, 2), sum(Math.sqrt(sub(1, mul(t -= 2, t))), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_inoutCirc(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "p": {
                "a": 1,
                "k": [{
                    "i": {
                        "x": 0.833,
                        "y": 0.833
                    },
                    "o": {
                        "x": 0.167,
                        "y": 0.167
                    },
                    "n": "0p833_0p833_0p167_0p167",
                    "t": 0,
                    "s": [250, 337, 0],
                    "e": [250, 264.5, 0],
                    "to": [0, -12.0833330154419, 0],
                    "ti": [0, 0, 0]
                }, {
                    "i": {
                        "x": 0.833,
                        "y": 0.833
                    },
                    "o": {
                        "x": 0.167,
                        "y": 0.167
                    },
                    "n": "0p833_0p833_0p167_0p167",
                    "t": 60,
                    "s": [250, 264.5, 0],
                    "e": [250, 337, 0],
                    "to": [0, 0, 0],
                    "ti": [0, -12.0833330154419, 0]
                }, {
                    "t": 120
                }],
                "ix": 2,
                "x": "var $bm_rt;\nfunction easeandwizz_inoutCirc(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return sum(mul(div($bm_neg(c), 2), sub(Math.sqrt(sub(1, mul(t, t))), 1)), b);\n    return sum(mul(div(c, 2), sum(Math.sqrt(sub(1, mul(t -= 2, t))), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_inoutCirc(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            },
            "a": {
                "a": 0,
                "k": [194.5, 14.5, 0],
                "ix": 1
            },
            "s": {
                "a": 1,
                "k": [{
                    "i": {
                        "x": [0.833, 0.833, 0.833],
                        "y": [0.833, 0.833, 0.833]
                    },
                    "o": {
                        "x": [0.167, 0.167, 0.167],
                        "y": [0.167, 0.167, 0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167", "0p833_0p833_0p167_0p167", "0p833_0p833_0p167_0p167"],
                    "t": 0,
                    "s": [100, 100, 100],
                    "e": [80, 100, 100]
                }, {
                    "i": {
                        "x": [0.833, 0.833, 0.833],
                        "y": [0.833, 0.833, 0.833]
                    },
                    "o": {
                        "x": [0.167, 0.167, 0.167],
                        "y": [0.167, 0.167, 0.167]
                    },
                    "n": ["0p833_0p833_0p167_0p167", "0p833_0p833_0p167_0p167", "0p833_0p833_0p167_0p167"],
                    "t": 60,
                    "s": [80, 100, 100],
                    "e": [100, 100, 100]
                }, {
                    "t": 120
                }],
                "ix": 6,
                "x": "var $bm_rt;\nfunction easeandwizz_inoutCirc(t, b, c, d) {\n    if ((t /= d / 2) < 1)\n        return sum(mul(div($bm_neg(c), 2), sub(Math.sqrt(sub(1, mul(t, t))), 1)), b);\n    return sum(mul(div(c, 2), sum(Math.sqrt(sub(1, mul(t -= 2, t))), 1)), b);\n}\nfunction easeAndWizz() {\n    var t, d, sX, eX;\n    var n = 0;\n    if (numKeys > 0) {\n        n = nearestKey(time).index;\n        if (key(n).time > time) {\n            n--;\n        }\n    }\n    try {\n        var key1 = key(n);\n        var key2 = key(sum(n, 1));\n    } catch (e) {\n        return null;\n    }\n    t = sub(time, key1.time);\n    d = sub(key2.time, key1.time);\n    sX = key1.time;\n    eX = sub(key2.time, key1.time);\n    if (time < key1.time || time > key2.time) {\n        return null;\n    } else {\n        return valueAtTime(easeandwizz_inoutCirc(t, sX, eX, d));\n    }\n}\n$bm_rt = easeAndWizz() || value;"
            }
        },
        "ao": 0,
        "shapes": [{
            "ty": "gr",
            "it": [{
                "ind": 0,
                "ty": "sh",
                "ix": 1,
                "ks": {
                    "a": 0,
                    "k": {
                        "i": [
                            [0, 0],
                            [0, 0]
                        ],
                        "o": [
                            [0, 0],
                            [0, 0]
                        ],
                        "v": [
                            [14.5, 14.5],
                            [374.5, 14.5]
                        ],
                        "c": false
                    },
                    "ix": 2
                },
                "nm": "Tracciato 1",
                "mn": "ADBE Vector Shape - Group",
                "hd": false
            }, {
                "ty": "st",
                "c": {
                    "a": 0,
                    "k": [0, 0, 0, 1],
                    "ix": 3
                },
                "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 4
                },
                "w": {
                    "a": 0,
                    "k": 29,
                    "ix": 5
                },
                "lc": 1,
                "lj": 1,
                "ml": 10,
                "nm": "Traccia 1",
                "mn": "ADBE Vector Graphic - Stroke",
                "hd": false
            }, {
                "ty": "tr",
                "p": {
                    "a": 0,
                    "k": [0, 0],
                    "ix": 2
                },
                "a": {
                    "a": 0,
                    "k": [0, 0],
                    "ix": 1
                },
                "s": {
                    "a": 0,
                    "k": [100, 100],
                    "ix": 3
                },
                "r": {
                    "a": 0,
                    "k": 0,
                    "ix": 6
                },
                "o": {
                    "a": 0,
                    "k": 100,
                    "ix": 7
                },
                "sk": {
                    "a": 0,
                    "k": 0,
                    "ix": 4
                },
                "sa": {
                    "a": 0,
                    "k": 0,
                    "ix": 5
                },
                "nm": "Trasformazione"
            }],
            "nm": "Gruppo 1",
            "np": 2,
            "cix": 2,
            "ix": 1,
            "mn": "ADBE Vector Group",
            "hd": false
        }],
        "ip": 0,
        "op": 120,
        "st": 0,
        "bm": 0
    }],
    "markers": []
}
